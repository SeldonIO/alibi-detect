# This github action builds Alibi Detect and publishes it to PyPI.
# It is only run when a new tag is pushed to github.
# See https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
name: Publish ðŸ“¦ to PyPI 

# Only run when tags starting with "v" are pushed
on: 
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    name: Build and publish
    runs-on: ubuntu-18.04

    steps:
    # Setup version extractor (from tag)
    - uses: nowsprinting/check-version-format-action@v3
      id: version
      with:
        prefix: 'v'

    # Setup Python
    - uses: actions/checkout@master
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9

    # Build
    - name: Install pypa/build
      run: python -m pip install --user build==0.9.0
    - name: Build a binary wheel and a source tarball
      run: python -m build --sdist --wheel --outdir dist/ .

    # Publish to Test PyPI unconditionally
    - name: Publish ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

# TODO - Test below by:
# 1) AVOID adding PyPI api token, to protect from inadvertant release if the conditional is broken
# 2) Uncomment.
# 3) Push a non-stable tag (e.g. v11.0.0-alpha1). Check below step is NOT triggered.
# 4) Once happy, we can setup PyPI api token and it'll be ready to go.
#    # Publish to real PyPI if the tag is stable (i.e. not an alpha, beta or rc tag)
#    (see https://github.com/nowsprinting/check-version-format-action#is_stable)
#    - name: Publish ðŸ“¦ to PyPI
#      if: steps.version.outputs.is_stable == 'true'
#      uses: pypa/gh-action-pypi-publish@release/v1
#      with:
#        password: ${{ secrets.PYPI_API_TOKEN }}        

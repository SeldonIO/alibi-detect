# setuptools settings (we could change to poetry or flit in the future)
[build-system]
requires = [
	"setuptools~=62.0.0",
	"setuptools_scm~=6.2",
	"wheel~=0.37.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["alibi_detect*"]
exclude = ["**/tests*"]  # tests should be excluded by default (https://setuptools.pypa.io/en/latest/userguide/package_discovery.html#flat-layout) but exclude explicitly in case of change
namespaces = false

[tool.setuptools_scm]
write_to = "alibi_detect/_version.py"
version_scheme = "guess-next-dev"
local_scheme = "node-and-date"  #  adds git commit tag and date if workdir has changes

# Project metadata
[project]
name = "alibi-detect"
description = "Algorithms for outlier, adversarial and drift detection."
authors = [
	{name = "Seldon Technologies Ltd."}, 
	{email = "hello@seldon.io"}
]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.7, <3.11"

dynamic = ["version"]  # Since we use setuptools_scm 

classifiers = [
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Scientific/Engineering"
]

dependencies = [
    "matplotlib>=3.0.0, <4.0.0",
    "numpy>=1.16.2, <2.0.0",
    "pandas>=0.23.3, <2.0.0",
    "Pillow>=5.4.1, <10.0.0",
    "opencv-python>=3.2.0, <5.0.0",
    "scipy>=1.3.0, <2.0.0",
    'scikit-image>=0.14.2, !=0.17.1, <0.20',  # https://github.com/SeldonIO/alibi/issues/215
    "scikit-learn>=0.20.2, <2.0.0",
    "transformers>=4.0.0, <5.0.0",
    "dill>=0.3.0, <0.4.0",
    "tqdm>=4.28.1, <5.0.0",
    "requests>=2.21.0, <3.0.0",
    "pydantic>=1.8.0, <2.0.0",
    "toml>=0.10.1, <1.0.0",  # STC, see https://discuss.python.org/t/adopting-recommending-a-toml-parser/4068
    "catalogue>=2.0.0, <3.0.0",
    "numba>=0.50.0, !=0.54.0, <0.57.0",  # Avoid 0.54 due to: https://github.com/SeldonIO/alibi/issues/466,
    "typing-extensions>=3.7.4.3"
]

[project.urls]
repository = "https://github.com/SeldonIO/alibi-detect"
documentation = "https://docs.seldon.io/projects/alibi-detect/en/stable/"
homepage = "https://docs.seldon.io/projects/alibi-detect/en/stable/"

[project.optional-dependencies]
prophet = ["prophet>=1.1.0, <2.0.0"]
torch = ["torch>=1.7.0, <1.14.0"]
tensorflow = [ 
	"tensorflow_probability>=0.8.0, <0.19.0",
	"tensorflow>=2.2.0, !=2.6.0, !=2.6.1, <2.11.0"  # https://github.com/SeldonIO/alibi-detect/issues/375 and 387
]

keops = ["pykeops>=2.0.0, <2.2.0", "torch>=1.7.0, <1.14.0"]
all = [	
	"prophet>=1.1.0, <2.0.0",
        "tensorflow_probability>=0.8.0, <0.19.0",
        "tensorflow>=2.2.0, !=2.6.0, !=2.6.1, <2.11.0",  # https://github.com/SeldonIO/alibi-detect/issues/375 and 387
        "pykeops>=2.0.0, <2.2.0",
        "torch>=1.7.0, <1.14.0"
]


# pytest
# Entry point for use with pytest-randomly (set_seed sets RNG seeds during testing)
[project.entry-points."pytest_randomly.random_seeder"]
reseed = "alibi_detect.utils._random:set_seed"

[tool.pytest.ini_options]
addopts = "--tb native -W ignore --cov=alibi_detect --randomly-dont-reorganize --randomly-seed=0"
# randomly-dont-reorganize prevents pytest-randomly from reordering tests
# The pytest-randomly seed is fixed at 0 for now. Once the legacy np.random.seed(0)'s 
# are removed from tests, this can be removed, allowing all tests to use random seeds.


# mypy
[tool.mypy]
ignore_missing_imports = true
strict_optional = false
show_error_codes = true


# tox test environment for generating licenses (below syntax subject to change - https://tox.wiki/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini)
[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True

# tox test environments for generating licenses and testing optional dependencies
[tox:tox]
envlist=
    default
    tensorflow
    torch
    prophet
    keops
    all

# tox test environment for generating licenses
[testenv:licenses]
basepython = python
deps =
  pip-licenses
  typing_extensions # not present with py38
  idna-ssl # not present with py36
  dataclasses # not present with py36
  importlib-metadata # not present with py38
  zipp # not present with py38
  fsspec # not present with py36
  locket # not present with py36
  partd # not present with py36
commands =
  pip-licenses \
    --from=mixed \
    --format=csv \
    --output-file=./licenses/license_info.csv
  pip-licenses \
    --from=mixed \
    --format=plain-vertical \
    --with-license-file \
    --no-license-path \
    --output-file=./licenses/license.txt

# environment for testing imports without any optional dependencies installed
[testenv:default]
basepython = python
deps = pytest
    pytest-cov
    pytest-randomly
passenv = COMMAND
commands = {env:COMMAND:pytest --no-cov alibi_detect/tests/test_dep_management.py --opt-dep=default}

# tox test environment for testing tensorflow optional dependency imports
[testenv:tensorflow]
basepython = python
deps = pytest
    pytest-cov
    pytest-randomly
extras=
    tensorflow
commands =
    {env:COMMAND:pytest --no-cov alibi_detect/tests/test_dep_management.py --opt-dep=tensorflow}

# tox test environment for testing torch optional dependency imports
[testenv:torch]
basepython = python
deps = pytest
    pytest-cov
    pytest-randomly
extras=
    torch
commands =
    {env:COMMAND:pytest --no-cov alibi_detect/tests/test_dep_management.py --opt-dep=torch}

# tox test environment for testing prophet optional dependency imports
[testenv:prophet]
basepython = python
deps = pytest
    pytest-cov
    pytest-randomly
extras=
    prophet
commands =
    {env:COMMAND:pytest --no-cov alibi_detect/tests/test_dep_management.py --opt-dep=prophet}

# tox test environment for testing keops optional dependency imports
[testenv:keops]
basepython = python
deps = pytest
    pytest-cov
    pytest-randomly
extras=
    keops
commands =
    {env:COMMAND:pytest --no-cov alibi_detect/tests/test_dep_management.py --opt-dep=keops}

# environment for testing imports with all optional dependencies installed
[testenv:all]
basepython = python
deps = pytest
    pytest-cov
    pytest-randomly
extras=
    all
commands =
    {env:COMMAND:pytest --no-cov alibi_detect/tests/test_dep_management.py --opt-dep=all}
"""
